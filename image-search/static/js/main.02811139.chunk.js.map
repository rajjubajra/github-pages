{"version":3,"sources":["components/Logo.js","components/Result.js","components/SearchForm.js","components/Details.js","components/Search.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Logostyle","styled","div","_templateObject","Logo","react_default","a","createElement","src","alt","Result","state","data","route","props","_this2","this","_this$props","apiKey","apiUrl","fetch","concat","then","response","json","setState","hits","catch","err","console","log","_this$props2","imgArr","navPage","breakpointColumnsObj","default","length","1100","700","500","imgPreview","map","img","key","id","className","onClick","largeImageURL","likes","downloads","favorites","user","tags","style","width","type","imgCounter","resultArry","atl","substring","view","react_masonry_css_es5_default","breakpointCols","columnClassName","React","Component","Form","SearchForm_templateObject","SearchFrom","name","onChange","onTextChange","placeholder","value","Page","Details_templateObject","Details","title","float","Search_templateObject","Search","searchItem","amount","image_type","colors","orientation","order","per_page","onChecked","event","target","_this","color","_event$target","checked","newColor","slice","includes","push","filter","_event$target2","searchText","Object","defineProperty","axios","get","nav","page","components_Details","Search_Page","components_Logo","SearchForm","components_Result","Ftr","Footer_templateObject","Footer","Date","getFullYear","href","App","components_Search","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.02811139.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Logostyle = styled.div`\n    width: 100%;\n    display:flex;\n\n    img{\n      width: 200px;\n    }\n    span{\n      display: block;\n      position: relative;\n      top: -18px;\n      left: 29px;\n      font-family: sans-serif;\n      font-size: 1.0rem;\n      color: #085898;\n      letter-spacing: 0.21em;\n    }\n`;\n\nconst Logo = () => (\n  <Logostyle>\n  <div>\n    <img src='./images/logo-h.jpg' alt='yellow-website logo'/>\n    <span>Image Search</span>\n  </div>  \n  \n  </Logostyle>\n)\nexport default Logo;","import React from 'react';\nimport Masonry from 'react-masonry-css';\n\nclass Result extends React.Component{\n  state = {\n    data: [],\n    route: 'home'\n  }\n  \n  componentDidMount(props){\n    /** FETCH IMAGES TO PREVIEW [ IF SEARCH RESULT IS EMPTY ] */\n    const {apiKey, apiUrl} = this.props;\n    const query = 'japanese garden';\n    fetch(`${apiUrl}/?key=${apiKey}&q=${query}&image_type=photo&per_page=10&min_width=600&min_height:300`)\n    .then((response) => response.json())\n    .then( data => this.setState({data: data.hits}))\n    .catch(err => console.log(err));;\n  }\n\n  render(props){\n        const { imgArr, navPage } = this.props;\n        /** Masonry CSS Breakpoint */\n        const breakpointColumnsObj = {\n          default: imgArr.length < 1 ? 2 : 4,\n          1100: 3,\n          700: 2,\n          500: 1\n        };\n\n\n                 \n        /** if search data is empty Preview 10 Images as Home page */\n        const imgPreview = this.state.data.map((img)=>{\n          return(\n            <section key={img.id} className='preview'\n            onClick={()=>navPage('detail', \n                                          img.largeImageURL,\n                                          img.likes,\n                                          img.downloads,\n                                          img.favorites,\n                                          img.user,\n                                          img.tags\n                                          )}\n            >\n               <div><img style={{width:'100%'}} src={img.largeImageURL} alt={img.type} /></div>\n            </section>\n          )\n       });\n       /** SEARCH RESULT IMAGE ARRAY */\n        let imgCounter = 1;\n        const resultArry = imgArr.map((img) =>{\n                  return (\n                    <section className='preview' key={img.id} \n                    onClick={()=>navPage('detail', \n                                          img.largeImageURL,\n                                          img.likes,\n                                          img.downloads,\n                                          img.favorites,\n                                          img.user,\n                                          img.tags\n                                          )}\n                    >\n                      <div>\n                        <img \n                          style={{width: '100%'}}  \n                          src={img.largeImageURL} atl={img.type} />\n                      </div>\n                      <div>\n                        <span>{imgCounter++} : </span>\n                        <span>{img.tags.length > 25 ? img.tags.substring(0,25) + '..' : img.tags}</span>\n                        <span className='right'>\n                          <span><i className=\"fas fa-thumbs-up\"></i>{img.likes}</span>\n                          <span><i className=\"fas fa-download\"></i>{img.downloads}</span>\n                        </span>     \n                      </div>      \n                    </section>\n                  )});\n\n        /** Images preview as Home page, if search result is empty */          \n        const view = imgArr.length > 0  ? resultArry : imgPreview;    \n      \n        return(\n        <Masonry\n          breakpointCols={breakpointColumnsObj}\n          className=\"my-masonry-grid\"\n          columnClassName=\"my-masonry-grid_column\">\n                {view}\n        </Masonry>\n      )\n  }\n\n}\nexport default Result;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Form = styled.div`\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 30px;\n    \n    .row{\n      display: flex;\n      justify-content: center;\n      flex-wrap: wrap;\n    }  \n\n      input.search{\n        width: 240px;\n        border: 0px;\n        border-bottom: 1px solid #ccc;\n        margin: 20px;\n        font-size: 1.0rem;\n        letter-spacing: 2px;\n        padding: 5px 5px;\n      }\n\n      select{\n        font-size: 0.80rem;\n        color: #9c9898;\n        border: 0px;\n        background: white;\n        border-bottom: 1px solid #ccc;\n        border-radius: 0px;\n        margin: 0px 10px;\n      }\n\n      .row > div > label{\n        font-size: 0.80rem;\n        font-family: sans-serif;\n        color: #888;\n      }\n\n      > div > input[type='checkbox']{\n        font-size: 01rem;\n        margin: 0px 15px 0px 0px;\n      }\n    \n\n`;\n\n\nconst SearchFrom = (props) => (\n    <Form>\n      <div className='row'>\n          <input \n            className='search' \n            type='text' \n            name='searchItem' \n            onChange={props.onTextChange}  \n            placeholder='Pixabay Image Search....'\n          />\n      </div>\n      <div className='row'>\n           <div>\n                <select name=\"image_type\" onChange={props.onTextChange}>\n                <option value='all'>All</option>\n                  <option value='photo'>Photo</option>\n                  <option value='vector'>Vector</option>\n                  <option value='illustration'>Illustration</option>\n                </select>\n            </div>\n            <div>\n              <select name='colors' onChange={props.onTextChange}>\n                  <option>--Select Colour --</option>\n                  <option value='grayscale'>Black and White</option>\n                  <option value='transparent'>Transparent</option>\n                  <option value='red'>Red</option>\n                  <option value='green'>Green</option>\n                  <option value='blue'>Blue</option>\n                  <option value='yellow'>Yellow</option>\n                  <option value='white'>White</option>\n                  <option value='pink'>Pink</option>\n              </select>\n            </div>\n            {/* <div>\n                <label>Grayscale</label> <input type='checkbox' name='colors' onChange={props.onChecked} value='grayscale'/>\n                <label>Red</label>       <input type='checkbox' name='colors' onChange={props.onChecked} value='red'/>\n                <label>Green</label>     <input type='checkbox' name='colors' onChange={props.onChecked} value='green'/>\n            </div>  */}\n            <div>\n                  <select name=\"orientation\" onChange={props.onTextChange}>\n                    <option value='all'>All</option>\n                    <option value='vertical'>Verticle</option>\n                    <option value='horizontal'>Horizontal</option>\n                  </select>\n            </div>  \n            <div>\n                <select name='order' onChange={props.onTextChange}>\n                  <option value='papular'>Popular</option>\n                  <option value='latest'>Latest</option>\n                </select>\n            </div>\n            <div>\n                <select name='per_page' onChange={props.onTextChange}>\n                  <option value='30'>30</option>\n                  <option value='60'>60</option>\n                  <option value='99'>99</option>\n                  <option value='200'>200</option>\n                </select>\n            </div>\n      </div>      \n    </Form>\n)\nexport default SearchFrom;","import React from 'react';\nimport styled from 'styled-components';\n\nconst Page = styled.div`\n  display: flex;\n  width: 98%;\n  padding: 2%;\n  margin-bottom: 100px;\n\n  h1{\n    font-weight: 100;\n    font-family: sans-serif;\n    text-transform: uppercase;\n    font-size: 1.3rem;\n    letter-spacing: 2px;\n  }\n\n  .imgurl{\n    font-size: 0.5rem;\n  }\n\n  .close {\n    font-weight: 100!important;\n    font-size: 2rem;\n    margin: 0px 0px;\n    cursor: pointer;\n    color: #79767685;\n    }\n\n  .far{\n      font-weight: 400;\n      margin: 0px 5px 0px 0px;\n    } \n  .fas{\n    margin: 0px 5px 0px 0px;\n  }   \n\n  ul > li{\n    list-style: none;\n    line-height: 1.3rem;\n  }\n\n > div.image{\n   width: 63%;\n   min-width: 400px;\n   > img{\n     width: 100%;\n     border: 1px solid #000;\n   }\n }\n\n > div.detail{\n      width: 35%;\n      padding: 0 2%;\n      font-size: 0.8rem;\n      font-family: sans-serif;\n      font-weight: 300;\n } \n\n`;\n\nclass Details extends React.Component{\n\n  \n  render(props){\n    const { navPage, largeImageURL, likes, downloads, favorites, user, tags}=this.props;\n    console.log('Image DEtail', favorites );\n    return(\n      <Page>\n        <div className='image'><img src={largeImageURL} alt='' /></div>\n        <div className='detail'>\n            <div>\n                <div>\n                  <span onClick={()=>{navPage('home')}}>\n                     <i className=\"far fa-times-circle close\" \n                     title=\"Close Image, back to search\">\n                     </i>\n                  </span>\n                  <span style={{float:'right'}}>\n                      <img style={{width:'50px'}} src='./images/logo150x150.png' alt='Yellow-Website Logo' />\n                  </span>  \n\n                </div>\n                <h1>Image Details: </h1>\n                <div>Image Url: <span className='imgurl'>{largeImageURL}</span></div>\n                <hr />\n                <div>User: {user}</div>\n                <div>\n                  <ul>\n                    <li><i className=\"far fa-thumbs-up\"></i>Likes: {likes}</li>\n                    <li><i className=\"fas fa-download\"></i>Download: {downloads}</li>\n                    <li><i className=\"far fa-heart\"></i>Favorites: {favorites}</li>\n                  </ul>\n                </div>\n                <div>\n                  <p>Tages: {tags}</p>\n                </div>\n            </div>\n        </div>\n       \n      </Page>\n    )\n  }\n\n\n}\nexport default Details;","import React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport Logo from './Logo';\nimport Result from './Result';\nimport SearchForm from './SearchForm';\nimport Details from './Details';\n\nconst Page = styled.div`\n   margin-bottom: 100px;\n\n   > div.header{\n     width: 100%;\n     display: flex;\n     flex-wrap: wrap;\n     justify-content: center;\n\n     > div.search{ \n       width: 80%;\n       display: flex;\n       justify-content: center;\n\n     }\n   }\n`;\n\n\nclass Search extends React.Component{\n  state = {\n    searchItem: '',\n    amount: 50,\n    image_type: 'photo',\n    colors: '', //Filter images by color properties, comma separated list of values \n    orientation: 'all',\n    order: 'popular',\n    per_page: 30,\n    apiUrl: 'https://pixabay.com/api',\n    apiKey: '6340485-cbcfeb247f45f626113c4d611',\n    imgArr: [],\n    route: 'home',\n    /** IMAGE DETAIL PAGE */\n    largeImageURL: '',\n    likes: 0,\n    downloads: 0,\n    favorites: 0,\n    user: '',\n    tags: ''\n\n  }\n\n  onChecked = (event) =>\n  {\n    console.log('Checked',event.target.value);\n    const color = this.state.color;\n    const {name, value, checked } = event.target;\n    let newColor = this.state.colors.slice();\n\n    if(name === 'colors' && checked ){\n        !newColor.includes(value) && newColor.push(value);\n        this.setState({colors: newColor});\n        \n    }else{\n        this.setState({colors: this.state.colors.filter(\n            function(colors) { \n            return colors !== event.target.value \n            }\n        )\n      });\n    }\n  }\n\n  onTextChange = (event) => {\n    const { name, type, value } = event.target;\n    const searchText = value; \n    this.setState({[name]: searchText } ,\n    () => {\n      if(searchText === ''){\n        this.setState({imgArr: [] });\n      }else{\n        axios\n        .get(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchItem}&image_type=${this.state.image_type}&safesearch=true&orientation=${this.state.orientation}&colors=${this.state.colors}&order=${this.state.order}&per_page=${this.state.per_page}`)\n        .then(response => this.setState({imgArr: response.data.hits}))\n        .catch(err => console.log(err));\n      }\n    });\n\n    \n  };\n\n\n  navPage = (nav, largeImageURL, likes, downloads, favorites, user, tags ) => {\n    this.setState({route: nav});\n    this.setState({largeImageURL});\n    this.setState({likes});\n    this.setState({downloads});\n    this.setState({favorites});\n    this.setState({user});\n    this.setState({tags})\n    console.log('NAV TO NEW PAGE', nav, this.state.likes);  \n  }\n\n\n  /** PAGE NAVIGATION */\n  route = (page) => {\n\n    switch(page){\n\n      case 'detail':\n      return <Details \n                navPage={this.navPage}\n                largeImageURL={this.state.largeImageURL} \n                likes={this.state.likes}\n                downloads={this.state.downloads}\n                favorites={this.state.favorites}\n                user={this.state.user}\n                tags={this.state.tags}              \n            />\n      break;\n\n      default:\n      return(\n        <Page>\n          <div className='header'> \n                <div className='logo'><Logo /></div>\n                <div className='search'>\n                    <SearchForm onTextChange={this.onTextChange} onChecked={this.onChecked} />\n                </div>\n            </div>\n            <div className='result'>\n              <Result \n                imgArr={this.state.imgArr}  \n                apiKey={this.state.apiKey} \n                apiUrl={this.state.apiUrl}\n                navPage={this.navPage}            \n              />\n            </div>\n        </Page>);\n        break;\n    }\n   \n    \n  }\n\n\n\n  /** RENDER*************************** */\n  render(){\n    console.log(\"Image Array\", this.state.colors);\n    const page = this.state.route;\n    return (\n      <div>\n        {this.route(this.state.route)}\n      </div>\n    )\n   \n     \n\n  }\n\n}\nexport default Search;\n\n\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Ftr = styled.div`\n  width: 100%;\n  display: block;\n  position: fixed;\n  bottom: 0px;\n  background-color: #e0dcdce0;\n\n  .logo{\n    width: 60px;\n    padding: 0px;\n    margin: 0px;\n    position: relative;\n    top: 6px;\n  }\n  .link{\n    text-decoration: none;\n    color: #4a6198;\n  }\n\n  > div{\n    text-align: center;\n    font-size: 0.9rem;\n    color: #4a6198;\n  }\n\n`;\n\nconst Footer = (props) => (\n  <Ftr>\n    <div>\n        <p>Design all right reserved { (new Date().getFullYear())} &copy; \n            <a className='link' href='http://www.yellow-website.com'>Yellow-Website.com</a> | image source: <a href='https://pixabay.com' target='_blank'><img className='logo' src='./images/pixabay.png' alt='pixabay logo' /></a> </p>\n    </div>\n\n  </Ftr>\n)\nexport default Footer;","import React, { Component } from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport Footer from './components/Footer';\n\n\nclass App extends Component {\n      render(){\n        return(\n          <div>\n            <Search />\n            <Footer />\n          </div>\n        )\n      }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}